{"version":3,"sources":["App.js","index.js"],"names":["App","colorArray","useState","text","setText","author","setAuthor","topic","setTopic","randomColor","Math","floor","random","length","famousApi","topicTitle","charAt","toUpperCase","slice","newQuote","fetch","then","quote","json","content","useEffect","fullQuote","quoteWithHash","id","style","display","justifyContent","borderRadius","padding","flexDirection","position","background","width","top","msTransform","transform","className","DropdownButton","variant","title","Dropdown","Item","onClick","Button","backgroundColor","border","TwitterShareButton","marginRight","url","appId","icon","faTwitterSquare","size","color","FacebookShareButton","faFacebookSquare","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6460b4a0.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {FacebookIcon, FacebookShareButton, TwitterIcon, TwitterShareButton,} from \"react-share\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Button, Dropdown, DropdownButton, Container} from 'react-bootstrap'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faTwitter, faTwitterSquare, faFacebookSquare} from \"@fortawesome/free-brands-svg-icons\"\n  \n\nexport default function App() {\n  const colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \n\t\t  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\n\t\t  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \n\t\t  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\n\t\t  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \n\t\t  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\n\t\t  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \n\t\t  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\n\t\t  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \n\t\t  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\n\n  const [text, setText] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [topic, setTopic] = useState(\"\");\n  const randomColor= colorArray[Math.floor(Math.random() * colorArray.length)]\n\n  const famousApi = topic == \"\"? 'https://api.quotable.io/random?tags=famous-quotes' : `http://api.quotable.io/random?tags=famous-quotes,${topic}`;\n  const topicTitle = topic == \"\"? `All topics` : topic.charAt(0).toUpperCase() + topic.slice(1);\n  \n  const newQuote=()=>{\n    fetch(`https://api.quotable.io/random?tags=${topic}`)\n    .then(quote => quote.json())\n    .then(quote=>{\n      setText(quote.content);\n      setAuthor(quote.author);\n      }\n    )\n  }\n  const famousQuote=()=>{\n    fetch(famousApi)\n    .then(quote => quote.json())\n    .then(quote=>{\n      setText(quote.content);\n      setAuthor(quote.author);\n      }\n    )\n  }\n  \n \n\n  useEffect(newQuote, [])\n  \n  const fullQuote = `\"${text}\" - ${author}`\n  const quoteWithHash = `\"${text}\" - ${author} #QuoteMachine`\n  \n  \n  return (\n    <div id=\"quote-box\" style={{display:\"flex\", justifyContent:\"center\"}}>\n          \n        \n          <div style={{borderRadius:\"1em\", display:\"flex\", padding:\"10px\", flexDirection:\"column\", position:\"absolute\", background:\"lightBlue\", width:\"50%\", top:\"50%\", msTransform: \"translateY(-50%)\", transform: \"translateY(-50%)\"}}>\n          \n            <blockquote className=\"blockquote mb-0\" >\n              <div id=\"text\">\n                <p>{text}</p>\n              </div>\n              <div id=\"author\" style={{}}>\n                <cite>- {author}</cite>\n              </div>\n            </blockquote>\n          \n            <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\n              <div style={{display:\"flex\", justifyContent:\"space-between\"}}>\n                <DropdownButton id=\"topic-dropdown\" variant=\"light\" title={topicTitle}>\n                  <Dropdown.Item onClick={()=> setTopic(\"\")}>All Topics</Dropdown.Item>\n                  <Dropdown.Item onClick={()=> setTopic(\"wisdom\")}>Wisdom</Dropdown.Item>\n                  <Dropdown.Item onClick={()=> setTopic(\"inspirational\")}>Inspirational</Dropdown.Item>\n                  <Dropdown.Item onClick={()=> setTopic(\"technology\")}>Technology</Dropdown.Item>\n                  <Dropdown.Item onClick={()=> setTopic(\"friendship\")}>Friendship</Dropdown.Item>\n                </DropdownButton>\n              \n                <Button style={{backgroundColor: randomColor, border:\"0\"}} id=\"new-quote\" onClick={newQuote} >\n                      Random Quote\n                </Button>\n                \n                <Button id=\"famous-quote\" onClick={famousQuote}>\n                      Famous Quote\n                </Button>\n              \n              </div>\n              <div className=\"socials\">\n                <TwitterShareButton style={{marginRight:\"5px\"}} url={quoteWithHash} appId={21095180}>\n                <FontAwesomeIcon icon={faTwitterSquare} size=\"3x\" style={{color: randomColor}} />\n\n\n                </TwitterShareButton>\n                <FacebookShareButton url={\"github.com\"} quote={fullQuote} appId={212712967333963}>\n\n                <FontAwesomeIcon icon={faFacebookSquare} size=\"3x\" style={{color: randomColor}}/>\n                </FacebookShareButton>\n              </div>\n              </div>\n            </div>\n          \n        \n        <a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\" /> {/*this is here just to pass an automized test, the actual social buttons are above*/}\n    </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}